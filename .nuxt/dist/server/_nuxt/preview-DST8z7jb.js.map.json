{"file":"preview-DST8z7jb.js","mappings":";AAEO,MAAM,oBAAoB,MAAM;AACrC,QAAM,kBAAkB,MAAM;AAC5B,WAAO,UAAU,cAAc,EAAE,SAAS,SAAgE;AAAA,EAC5G;AACM,QAAA,kBAAkB,CAAC,UAAU;AACvB,cAAA,cAAc,EAAE,QAAQ;AACzB,eAAE,MAAM,UAAU,SAAS;AAAA,EAStC;AACA,QAAM,YAAY,MAAM;AAChB,UAAA,QAAQ,WAAW;AACrB,QAAA,OAAO,UAAU,eAAe,KAAK,OAAO,SAAS,KAAK,CAAC,MAAM,SAAS;AACrE,aAAA;AAAA,IAAA;AAET,QAAI,MAAM,WAAW,UAAU,cAAc,EAAE,OAAO;AAK7C,aAAA;AAAA,IAAA;AAKF,WAAA;AAAA,EACT;AACO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[],"sources":["../../../../node_modules/@nuxt/content/dist/runtime/composables/preview.js"],"sourcesContent":["import { useCookie, useRoute } from \"#imports\";\nlet showWarning = true;\nexport const useContentPreview = () => {\n  const getPreviewToken = () => {\n    return useCookie(\"previewToken\").value || import.meta.client && sessionStorage.getItem(\"previewToken\") || void 0;\n  };\n  const setPreviewToken = (token) => {\n    useCookie(\"previewToken\").value = token;\n    useRoute().query.preview = token || \"\";\n    if (import.meta.client) {\n      if (token) {\n        sessionStorage.setItem(\"previewToken\", token);\n      } else {\n        sessionStorage.removeItem(\"previewToken\");\n      }\n      window.location.reload();\n    }\n  };\n  const isEnabled = () => {\n    const query = useRoute().query;\n    if (Object.prototype.hasOwnProperty.call(query, \"preview\") && !query.preview) {\n      return false;\n    }\n    if (query.preview || useCookie(\"previewToken\").value) {\n      if (import.meta.dev && showWarning) {\n        console.warn(\"[content] Client DB enabled since a preview token is set (either in query or cookie).\");\n        showWarning = false;\n      }\n      return true;\n    }\n    if (import.meta.client && sessionStorage.getItem(\"previewToken\")) {\n      return true;\n    }\n    return false;\n  };\n  return {\n    isEnabled,\n    getPreviewToken,\n    setPreviewToken\n  };\n};\n"],"version":3}